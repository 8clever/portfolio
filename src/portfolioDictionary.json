[{"description":{"en":"\r\n### Betacall 4all\r\n\r\nhttps://niti.betacall4all.ru\r\n\r\nWeb application for automatic customer call.\r\n\r\nThe system calls customers by orders. If the customer got through, the call is transferred to the operator and the order opens automatically.\r\nThe operator only has to confirm the delivery conditions, or cancel the order.\r\nWith this system, the call center bandwidth has increased 3 times, since operators do not spend time waiting for a connection with the client if it is not responding or is not available.\r\nAlso, the system makes parallel calls in order to increase the chance of a successful dial-up so that the operator does not waste time in vain.\r\n\r\nСтек технологий: Nodejs, MongoDB, React, Socket.io, Asterisk.\r\n\r\nTeam: 1 Full-stack, 1 Admin IP-phone\r\n\r\nPosition: Full-stack\r\n","ru":"### Betacall 4all\n\nhttps://niti.betacall4all.ru\n\nВеб-приложение для автоматического обзвона клиентов.\n\nСистема обзванивает клиентов по заказам. Если клиенту дозвонились, звонок передается оператору и автоматически открывается заказ.\nОператору лишь остается подтвердить условия доставки, либо отменить заказ.\nС данной системой, пропускная способность колл-центра увеличилась в 3 раза, поскольку операторы не тратят время на ожидание соединения с клиентом если он не отвечает или не доступен.\nТак же, система осуществляет параллельные звонки, дабы увеличить шанс успешного дозвона, чтобы оператор не тратил время в пустую.\n\nСтек технологий: Nodejs, MongoDB, React, Socket.io, Asterisk.\n\nКоманда: 1 Фулл-стек разработчик, 1 Администратор IP-телефонии\n\nДолжность: Фулл-стек разработчик\n"},"name":"betacall","screens":["betacall/login.png","betacall/main_admin.png","betacall/operator_main.png"]},{"description":{"en":"\n### Directories\n\nDigital platform for reference books, classifiers, collection forms.\n\nThe main functionality:\n  - Display of data directories on the map\n  - Document flow\n  - Creation / Editing of directories, forms, classifiers\n\nTechnology Stack: Java, React, TypeScript, PostgreSQL\n\nTeam: 2 analysts, 3 Front-end developer, 4 Buck-end developer, 1 QA\n\nPosition: Tim Lead Front End.","ru":"### Справочники\n\nЦифровая платформа для ведения справочников, классификаторов, форм сбора.\n\nОсновной функционал:\n  - Отображение данных справочников на карте\n  - Документооборот\n  - Создание/Редактирование справочников, форм, классификаторов\n\nСтек технологий: Java, React, TypeScript, PostgreSQL\n\nКоманда: 2 аналитика, 3 Фронт-енд разработчика, 4 Бак-енд разработчика, 1 QA\n\nДолжность: Тим-Лид Фронт-енд."},"name":"directories","screens":["directories/add-document.png","directories/edit-directory.png","directories/forms.png","directories/login.png","directories/main.png"]},{"description":{"en":"### Dirty Clean\n\nMay the broom be with you!\n\nLogic Match2 puzzle game where the player has to learn all the delights of general cleaning and little more. Litter everything up with rubbish or be a brave connoisseur of cleanliness. Only you decide the fate of small areas of the city. Where each character has their own purpose and fear.\n\nExplore different branches of improvements. Reveal all the chains of character interactions. Complete all missions and levels. Learn Zen in dirty cleaning. May the broom be with you!\n\nYou can download game by [link](/dirtyclean)\n\nTechnology Stack: Unity3d, C#\n\nTeam: 1 developer, 1 QA, 1 game-designer\n\nPosition: Main Developer","ru":"### Dirty Clean\n\nДа пребудет с тобой метла!\n\nЛогическая игра-головоломка Match2, в которой игроку предстоит познать все прелести генеральной уборки и многое другое. Засорите все мусором или станьте отважным ценителем чистоты. Только вы решаете судьбу небольших участков города. Где у каждого персонажа своя цель и страх.\n\nИзучите различные ветки улучшений. Раскройте все цепочки взаимодействия персонажей. Завершите все миссии и уровни. Изучите дзен в грязной уборке.\n\nСкачать игру можно по [ссылке] (/dirtyclean)\n\nСтек технологий: Unity3d, C#\n\nКоманда: 1 разработчик, 1 QA, 1 гейм-дизайнер\n\nДолжность: Главный разработчик\n"},"name":"dirtyclean","screens":["dirtyclean/Screenshot_20201020-214414_DirtyClean.jpg","dirtyclean/Screenshot_20201020-214508_DirtyClean.jpg","dirtyclean/Screenshot_20201020-214529_DirtyClean.jpg","dirtyclean/photo_2020-10-27_13-05-34.jpg"]},{"description":{"en":"### Glaskameny\n\nhttps://glaskameny.com\n\nWeb application. Analog freshdesk, roadmap.\nCreated under the PushOK brand.\nThe main reason for the implementation of this project is that the analogues do not have multilingualism and text translations on the fly.\nImplemented functionality:\n\n\n\n1. Integration with freshdesk. Ability to import dialogs via freshdesk api.\n2. Chat - umd module for integration on any site. Through it, you can send feedbacks directly to the glaskameny system.\n3. Admin panel - allows you to view dialogs and create ideas from them\n4. Root panel - allows you to manage projects and users.\n5. Front part - gives everyone the opportunity to view current and completed ideas, you can \"clap\", \"like\", view and send comments.\n\n\nTechnology Stack: Nodejs, MongoDB, React, React-Native, Freshdesk.\n\nTeam: 1 Full-stack developer, 1 QA\n\nPosition: Full-stack developer","ru":"### Glaskameny\r\n\r\nhttps://glaskameny.com\r\n\r\nВеб-приложение. Аналог freshdesk, roadmap.\r\nСоздан под брендом PushOK.\r\nОсновная причина реализации данного проекта заключается в том, что аналоги не имеют мультиязычности и переводов текста на лету.\r\nРеализованный функционал:\r\n\r\n1. Интеграция с freshdesk. Возможность импортировать диалоги через freshdesk api.\r\n2. Чат - umd модуль для интеграции на любой сайт. Через него можно отправлять фидбеки непосредственно в систему glaskameny.\r\n3. Админ панель - дает возможность просматривать диалоги и создавать из них идеи\r\n4. Root панель - дает возможность управлять проектами и пользователями.\r\n5. Фронт часть - дает возможность всем просматривать текущие и выполненные идеи, можно \"хлопать\", \"лайкать\", просматривать и отправлять комментарии.\r\n\r\nCтек технологий: Nodejs, MongoDB, React, React-Native, Freshdesk.\r\n\r\nКоманда: 1 Фулл-стек разработчик, 1 QA\r\n\r\nДолжность: Фулл-стек разработчик"},"name":"glaskameny","screens":["glaskameny/chat.png","glaskameny/conversations.png","glaskameny/edit_project.png","glaskameny/front_side.png","glaskameny/login.png","glaskameny/manage_ideas.png","glaskameny/manage_projects.png","glaskameny/root.png"]},{"description":{"en":"### SST\n\nImplemented under the brand name Pvinova\n\nNot a great web service for installing / updating / removing modules in a car.\nThe client can request it from the service, the operator will check, the employee will do it.\nThere is a warehouse service. By warehouse service, you can track the module. The module can be in the car, at the supplier’s warehouse or at the mechanic’s warehouse.\nTracking modules is the main reason for creating this project.\n\nTechnology stack: Nodejs, MongoDb, MsSql, React, Nextjs.\n\nTeam: 1 Full-stack developer, 1 QA\n\nPosition: Full-stack developer","ru":"### SST\r\n\r\nРеализован под брендом Pvinova\r\n\r\nНе большой веб-сервис по инсталляции/обновлению/удалению модулей в авто.\r\nКлиент может его запросить сервис, оператор проверит, работник сделает.\r\nИмеется сервис склада. По сервису склада можно отследить модуль. Модуль может быть в машине, на складе у поставщика или на складе у механика.\r\nОтслеживание модулей и является основной причиной создания данного проекта.\r\n\r\nСтек технологий: Nodejs, MongoDb, MsSql, React, Nextjs.\r\n\r\nКоманда: 1 Фулл-стек разработчик, 1 QA\r\n\r\nДолжность: Фулл-стек разработчик"},"name":"new sst","screens":["new sst/invoice.png","new sst/login.png","new sst/main.png","new sst/operator-screen.png","new sst/request-service.png","new sst/validate-service.png"]},{"description":{"en":"### Rosstat\n\nDigital analytical platform for collecting information on legal and individual entrepreneurs.\n\nThe main functionality:\n  - View and edit objects of observation\n  - Functional Algorithms\n  - Catalogs\n  - Selection criteria\n  - Metadata\n\nTechnology Stack: Java, React, TypeScript, PostgreSQL\n\nTeam: 2 analysts, 1 Front-end developer, 7 Back-end developers, 1 QA\n\nPosition: Tim Lead Front End.","ru":"### Росстат\n\nЦифровая аналитическая платформа для сбора информации о юридических и индивидуальных предпринимателях.\n\nОсновной функционал:\n  - Просмотр и реадктирование объектов наблюдения\n  - Функциональные алгоритмы\n  - Каталоги\n  - Критерии отбора\n  - Метаданные\n\nCтек технологий: Java, React, TypeScript, PostgreSQL\n\nКоманда: 2 аналитика, 1 Фронт-енд разработчик, 7 Бак-енд разработчиков, 1 QA\n\nДолжность: Тим-Лид Фронт-енд."},"name":"rosstat","screens":["rosstat/legal.png","rosstat/object-view.png"]},{"description":{"en":"\n### smtproxy\n\nhttps://smtproxy.com\n\nImplemented under the PushOK brand.\n\nVery small off-project.\nAggregation of emails.\nWell, or one input project =).","ru":"### smtproxy\r\n\r\nhttps://smtproxy.com\r\n\r\nРеализован под брендом PushOK.\r\n\r\nОчень маленький офф-проект.\r\nАггрегация имейлов. \r\nНу или проект одного инпута =)."},"name":"smtproxy","screens":["smtproxy/loggiden-screen.png","smtproxy/main.png"]},{"description":{"en":"\n### STAYS\n\nThe project was implemented under the Stays brand.\nRent, sale, long-term rental apartments.\nThis project has many domains such as\n\nhttps://riospothomes.com/\n\nhttps://www.easyrentrio.com/\n\nI worked on this project for 3 years.\nMain tasks:\n\n1. Finance - integration with payment systems such as cielo, rede, pagarme. Calculation of apartment prices.\n2. Extranet - integration with booking.com, airbnb, homeaway services.\n3. Support for a centralized system https://stays.cc.\n\nKey technologies:\nNodejs, MongoDB, Handlebars, JQuery, RequireJS.\n\nThe project has been over 6 years old. They wrote it before me and without me and after me =).\n\nTeam: 4 Full-stack developer, 1 designer, 1 QA\n\nPosition: Full-stack developer","ru":"### STAYS\r\n\r\nПроект реализован под брендом Stays.\r\nАренда, продажа, долгосрочная аренда апартаментов.\r\nЭтот проект имеет множество доменов таких как\r\n\r\nhttps://riospothomes.com/\r\n\r\nhttps://www.easyrentrio.com/\r\n\r\nНа этом проекте я работал 3 года. \r\nОсновные задачи:\r\n\r\n1. Финансы - интеграция с платежными системами, такими как cielo, rede, pagarme. Расчет цен на апартамент.\r\n2. Екстранет - интеграция с сервисами booking.com, airbnb, homeaway.\r\n3. Поддержка централизованной системы https://stays.cc .\r\n\r\nОсновные технологии:\r\nNodejs, MongoDB, Handlebars, JQuery, RequireJS.\r\n\r\nПроекту уже более 6 лет. Писали его до меня и без меня и после меня =).\r\n\r\nКоманда: 4 Фулл-стек разработчика, 1 дизайнер, 1 QA\r\n\r\nДолжность: Фулл-стек разработчик"},"name":"stays","screens":["stays/apartment.png","stays/front.png","stays/select-apartment.png"]},{"description":{"en":"\n### Studio Context\n\nhttps://studiocontext.ru/\n\nBallet School named after Diana Vishneva\n\nTechnology Stack: NodeJS, TypeScript, MongoDB, React\n\nTeam: 1 Full-stack developer, 1 QA\n\nPosition: Full Stack","ru":"### Studio Context\n\nhttps://studiocontext.ru/\n\nШкола балета имени Дианы Вишневой\n\nCтек технологий: NodeJS, TypeScript, MongoDB, React\n\nКоманда: 1 Фулл-стек разработчик, 1 QA\n\nДолжность: Фулл-стек"},"name":"studiocontext","screens":["studiocontext/direction.png","studiocontext/main.png","studiocontext/map.png"]},{"description":{"en":"### Super Gas Bras\n\nThe project is implemented under the brand Pvinova.\n\nThe main objective of the project is to optimize the time of gas filling stations.\n\nCustomers can indicate the time for which they want to arrive and the number of cylinders p13 for refueling.\nEach gas station has its own settings.\nThe site maintains statistics on refilled cylinders, refueling times, and deviations from the norm.\nFor the main screen at the gas station, there is an air panel so that customers are aware of the current state of the gas station.\n\nTechnology Stack: Nodejs, Backbone, RequireJS, JQuery, MongoDB\n\nTeam: 2 Full-stack developer, 1 QA\n\nPosition: Tim Lead","ru":"### Super Gas Bras\r\n\r\nПроект реализован под брендом Pvinova.\r\n\r\nОсновная задача проекта - оптимизировать время станций газовых заправок.\r\n\r\nКлиенты могут указать время на которое они хотят приехать и количество баллонов п13 на заправку.\r\nКаждая заправка имеет свои собственные настройки.\r\nСайт ведет статистику по заправленным баллонам, времени заправки, и отклонению от нормы.\r\nДля главного экрана на заправке, существует air panel, чтобы клиенты были в курсе текущего состояния заправки.\r\n\r\nСтек технологий: Nodejs, Backbone, RequireJS, JQuery, MongoDB\r\n\r\nКоманда: 2 Фулл-стек разработчика, 1 QA\r\n\r\nДолжность: Тим-лид"},"name":"super gas bras","screens":["super gas bras/checkin.png","super gas bras/control-panel.png","super gas bras/dashboard-kilograms.png","super gas bras/login.png","super gas bras/main.png","super gas bras/reservation.png","super gas bras/stations.png"]},{"description":{"en":"\n### Tabelidze\n\nhttps://tabelidze.skilap.org\n\nThe project is implemented under the brand PushOk\n\nThe project aims to manage the time of employees. Off project.\n\nBefore the start of the day, you need to indicate what projects you will be involved in and the time you can afford to spend.\nAfter you can start the day.\nDuring the working day, you must indicate what project you are working on by clicking the Play button.\nSo during the day statistics are accumulated, where you can see how much you planned and how much time you actually spent.\nAfter you can finish the day.\n\nCross-platform (desktop, mobile, web).\n\nTechnology Stack: Nodejs, React, Couchdb, Pouchdb, Electron, Phonegap\n\nTeam: 1 Full-stack developer\n\nPosition: Full-stack developer","ru":"### Tabelidze\r\n\r\nhttps://tabelidze.skilap.org\r\n\r\nПроект реализован под брендом PushOk\r\n\r\nПроект нацелен на управление временем сотрудников. Офф-проект.\r\n\r\nПеред началом дня нужно указать какими проектами будешь заниматься и время, которое можешь позволить себе потратить.\r\nПосле можно начать день.\r\nВо время рабочего дня, ты должен указать над каким проектом работаешь, нажав кнопочку Play.\r\nТак в течении дня накапливается статистика, где ты можешь увидеть, сколько запланировал и сколько в действительности потратил времени.\r\nПосле можно завершить день.\r\n\r\nКросс-платформенность (desktop, mobile, web).\r\n\r\nСтек технологий: Nodejs, React, Couchdb, Pouchdb, Electron, Phonegap\r\n\r\nКоманда: 1 Фулл-стек разработчик\r\n\r\nДолжность: Фулл-стек разработчик"},"name":"tabelidze","screens":["tabelidze/login.png","tabelidze/start_day.png","tabelidze/well_done.png","tabelidze/work_day.png"]}]